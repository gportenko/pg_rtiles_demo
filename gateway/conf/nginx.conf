worker_processes  1;
error_log logs/error.log;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    resolver 127.0.0.11 valid=10s;  # Docker's internal DNS 

    lua_package_path "$prefix/lua/?.lua;;";

    ssl_certificate     certs/localhost.crt;  # Relative to nginx prefix
    ssl_certificate_key certs/localhost.key;
    ssl_protocols       TLSv1.2 TLSv1.3;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
    add_header 'Access-Control-Max-Age' 86400 always;

    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;
        root html;
        index index.html;

        # Auth endpoint
        location = /auth/login {
            # Redirect to Keycloak
            return 302 http://localhost:7081/realms/rtiles/protocol/openid-connect/auth?client_id=rtiles&redirect_uri=https://localhost/auth/callback&response_type=code;
        }

        location = /auth/callback {
            content_by_lua_file lua/handle_callback.lua;
        }

        location = /auth/logout {
            add_header Set-Cookie "access_token=; Path=/; Secure; HttpOnly; SameSite=Lax; Domain=localhost";
            return 302 http://localhost:7081/realms/rtiles/protocol/openid-connect/logout;
        }

        # Public static files
        location ~* \.(json|js|css|pbf|png)$ {
            expires max;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # Protected endpoints
        location / {
            proxy_set_header  Authorization $http_authorization;
            proxy_pass_header Authorization;
            access_by_lua_file lua/authorize.lua;
            try_files $uri $uri/ =404;
        }

        location /tile/ {
            resolver 8.8.8.8;
            access_by_lua_file lua/authorize.lua;
            
            proxy_pass http://tileserver:3000/tile/;
        }
    }
}
